{
  "_from": "react-cookie",
  "_id": "react-cookie@3.0.4",
  "_inBundle": false,
  "_integrity": "sha512-WNf1LifcjRQfg/QEDYQkey78XNJ46/k+lhoKrTK1Iv1jiqInl5jmjRBnEqDJ32HhgeL0iJAsJrEC+o+LkJ/O9Q==",
  "_location": "/react-cookie",
  "_phantomChildren": {
    "react-is": "16.5.0"
  },
  "_requested": {
    "escapedName": "react-cookie",
    "fetchSpec": "latest",
    "name": "react-cookie",
    "raw": "react-cookie",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-cookie/-/react-cookie-3.0.4.tgz",
  "_shasum": "ae57db00cb5160675ce2fe06ab0962c728a6630b",
  "_shrinkwrap": null,
  "_spec": "react-cookie",
  "_where": "/home/judasfate/Desktop/Trainer/Second/react-blog/Client",
  "author": {
    "email": "benoit@reactivestack.com",
    "name": "Benoit Tremblay"
  },
  "bugs": {
    "url": "https://github.com/reactivestack/cookies/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/hoist-non-react-statics": "^3.0.1",
    "hoist-non-react-statics": "^3.0.0",
    "universal-cookie": "^3.0.4"
  },
  "deprecated": false,
  "description": "Universal cookies for React",
  "devDependencies": {
    "@babel/cli": "^7.0.0-rc.1",
    "react": "^16.3.0",
    "react-dom": "^16.3.0",
    "rimraf": "^2.6.1",
    "rollup": "^0.64.1",
    "typescript": "^3.0.1"
  },
  "files": [
    "cjs",
    "es6",
    "index.d.ts",
    "lib",
    "umd"
  ],
  "gitHead": "764ead9891f02c6fa181dc8ac065a9e2fa0dd455",
  "homepage": "https://github.com/reactivestack/cookies/tree/master/packages/react-cookie/#readme",
  "keywords": [
    "cookie",
    "isomophic",
    "react",
    "universal"
  ],
  "license": "MIT",
  "main": "cjs/index.js",
  "module": "es6/index.js",
  "name": "react-cookie",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 16.3.0"
  },
  "readme": "<h3 align=\"center\">\n  <a href=\"packages/react-cookie\">react-cookie</a>\n</h3>\n\n<p align=\"center\">\n  Universal cookies for <a href=\"https://facebook.github.io/react\">React</a><br />\n  <a href=\"https://badge.fury.io/js/react-cookie\"><img src=\"https://badge.fury.io/js/react-cookie.svg\" /></a>\n</p>\n\n[![Build Status](https://travis-ci.org/reactivestack/cookies.svg?branch=master)](https://travis-ci.org/reactivestack/cookies)\n<br />\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/coookies.svg)](https://saucelabs.com/u/coookies)\n\n## Integrations\n - [`universal-cookie`](https://www.npmjs.com/package/universal-cookie) - Universal cookies for JavaScript\n - [`universal-cookie-express`](https://www.npmjs.com/package/universal-cookie-express) - Hook cookies get/set on Express for server-rendering\n\n## Minimum requirement\n### react-cookie @ v3.0+\n - React.js >= 16.3.0 (new context API + forward ref)\n\n### react-cookie @ v0.0-v2.2\n - React.js >= 15\n\n## Getting started\n\n`npm install react-cookie`\n\nor in the browser (global variable `ReactCookie`):\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.js\"></script>\n<script crossorigin src=\"https://unpkg.com/universal-cookie@3/umd/universalCookie.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-cookie@3/umd/reactCookie.min.js\"></script>\n```\n\n## `<CookiesProvider />`\nSet the user cookies\n\nOn the server, the `cookies` props must be set using `req.universalCookies` or `new Cookie(cookieHeader)`\n\n## `withCookies(Component)`\nGive access to your cookies anywhere. Add the following props to your component:\n - cookies: Cookies instance allowing you to get, set and remove cookies.\n - allCookies: All your current cookies in an object.\n\n## Cookies\n\n### `get(name, [options])`\nGet a cookie value\n - name (string): cookie name\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `getAll([options])`\nGet all cookies\n - options (object):\n   - doNotParse (boolean): do not convert the cookie into an object no matter what\n\n### `set(name, value, [options])`\nSet a cookie value\n- name (string): cookie name\n- value (string|object): save the value and stringify the object if needed\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n### `remove(name, [options])`\nRemove a cookie\n- name (string): cookie name\n- options (object): Support all the cookie options from RFC 6265\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\n  - expires (Date): absolute expiration date for the cookie\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\n  - secure (boolean): Is only accessible through HTTPS?\n  - httpOnly (boolean): Is only the server can access the cookie?\n\n## Simple Example\n```js\n// Root.jsx\nimport React from 'react';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nexport default function Root() {\n  return (\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  );\n}\n```\n\n```js\n// App.jsx\nimport React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport NameForm from './NameForm';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { cookies } = props;\n    this.state = {\n      name: cookies.get('name') || 'Ben'\n    };\n  }\n\n  handleNameChange(name) {\n    const { cookies } = this.props;\n\n    cookies.set('name', name, { path: '/' });\n    this.setState({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <div>\n        <NameForm name={name} onChange={this.handleNameChange.bind(this)} />\n        {this.state.name && <h1>Hello {this.state.name}!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(App);\n```\n\n## Server-Rendering Example\n```js\n// src/components/App.js\nimport React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport NameForm from './NameForm';\n\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { cookies } = props;\n    this.state = {\n      name: cookies.get('name') || 'Ben'\n    };\n  }\n\n  handleNameChange(name) {\n    const { cookies } = this.props;\n\n    cookies.set('name', name, { path: '/' });\n    this.setState({ name });\n  }\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <div>\n        <NameForm name={name} onChange={this.handleNameChange.bind(this)} />\n        {this.state.name && <h1>Hello {this.state.name}!</h1>}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(App);\n```\n\n```js\n// src/server.js\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { CookiesProvider } from 'react-cookie';\n\nimport Html from './components/Html';\nimport App from './components/App';\n\nexport default function middleware(req, res) {\n  const markup = ReactDOMServer.renderToString(\n    <CookiesProvider cookies={req.universalCookies}>\n      <App />\n    </CookiesProvider>\n  );\n\n  const html = ReactDOMServer.renderToStaticMarkup(<Html markup={markup} />);\n\n  res.send('<!DOCTYPE html>' + html);\n}\n```\n\n```js\n// src/client.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CookiesProvider } from 'react-cookie';\n\nimport App from './components/App';\n\nconst appEl = document.getElementById('main-app');\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  appEl\n);\n```\n\n```js\n// server.js\nrequire('@babel/register');\n\nconst express = require('express');\nconst serverMiddleware = require('./src/server').default;\nconst cookiesMiddleware = require('universal-cookie-express');\n\nconst app = express();\n\napp\n  .use('/assets', express.static('dist'))\n  .use(cookiesMiddleware())\n  .use(serverMiddleware);\n\napp.listen(8080, function() {\n  console.log('Listening on 8080...');\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactivestack/cookies.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build-es6 && npm run build-cjs && npm run build-umd && npm run build-legacy",
    "build-cjs": "babel es6 -D -d cjs",
    "build-es6": "tsc",
    "build-legacy": "babel es6 -D -d lib",
    "build-umd": "rollup -c",
    "clean": "rimraf lib && rimraf es6 && rimraf cjs && rimraf umd"
  },
  "version": "3.0.4"
}
